import { useState } from "react";
import { db, auth } from "../firebase/Firebase";
import { collection, addDoc } from "firebase/firestore";
import { getStorage, ref, uploadBytesResumable, getDownloadURL } from "firebase/storage";
import { useNavigate } from "react-router-dom";
import { Info, Calendar, Clock4, MapPin } from "lucide-react";

function CreateEvent() {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [date, setDate] = useState("");
  const [location, setLocation] = useState("");
  const [startTime, setStartTime] = useState("");
  const [endTime, setEndTime] = useState("");
  const [image, setImage] = useState(null);
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();
  const storage = getStorage();

  const handleImageChange = (e) => {
    if (e.target.files[0]) {
      setImage(e.target.files[0]);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!title || !description || !date || !location || !startTime || !endTime || !image) {
      alert("–ú–æ–ª—è, –ø–æ–ø—ä–ª–Ω–µ—Ç–µ –≤—Å–∏—á–∫–∏ –ø–æ–ª–µ—Ç–∞ –∏ –∫–∞—á–µ—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.");
      return;
    }

    setLoading(true);

    try {
      const user = auth.currentUser;
      if (!user) {
        alert("–¢—Ä—è–±–≤–∞ –¥–∞ —Å—Ç–µ –≤–ª–µ–∑–ª–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–∞ —Å–∏, –∑–∞ –¥–∞ —Å—ä–∑–¥–∞–¥–µ—Ç–µ —Å—ä–±–∏—Ç–∏–µ.");
        return;
      }

      console.log("üì§ Uploading Image...");

      const storageRef = ref(storage, `event-images/${image.name}`);
      const uploadTask = uploadBytesResumable(storageRef, image);

      uploadTask.on(
        "state_changed",
        null,
        (error) => {
          console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∫–∞—á–≤–∞–Ω–µ—Ç–æ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ:", error);
          alert("–ù–µ—É—Å–ø–µ—à–Ω–æ –∫–∞—á–≤–∞–Ω–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ.");
          setLoading(false);
        },
        async () => {
          const downloadURL = await getDownloadURL(uploadTask.snapshot.ref);
          console.log("‚úÖ Image Uploaded Successfully! URL:", downloadURL);

          console.log("üì¶ Saving Event to Firestore...");

          await addDoc(collection(db, "events"), {
            title,
            description,
            date: new Date(date),
            location,
            startTime,
            endTime,
            imageUrl: downloadURL,
            createdBy: user.uid,
            createdAt: new Date().toISOString(),
          });

          console.log("‚úÖ Event Successfully Saved in Firestore!");
          alert("–°—ä–±–∏—Ç–∏–µ—Ç–æ –µ —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω–æ!");
          navigate("/");
        }
      );
    } catch (error) {
      console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ:", error);
      alert("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ—Ç–æ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.");
      setLoading(false);
    }
  };

  return (
    <div className="max-w-md sm:max-w-2xl mx-auto p-6 sm:p-8 bg-white shadow-md rounded-lg my-10">
      <h1 className="text-3xl font-bold mb-6">–î–µ—Ç–∞–π–ª–∏ –∑–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ</h1>

      <form onSubmit={handleSubmit} className="space-y-6">
        <div>
          <label className="block mb-1">–ò–º–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ</label>
          <div className="relative">
            <input
              type="text"
              placeholder="–í—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ"
              value={title}
              onChange={(e) => setTitle(e.target.value)}
              className="w-full border border-gray-400 rounded-md p-2 pl-10"
            />
            <span className="absolute left-3 top-3 text-gray-500 ">
              <Info size={20} />
            </span>
          </div>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <div>
            <label className="block font-medium mb-1">–î–∞—Ç–∞</label>
            <div className="relative">
              <input
                type="date"
                value={date}
                onChange={(e) => setDate(e.target.value)}
                className="w-full border border-gray-400 rounded-md p-2 pl-10"
              />
              <span className="absolute left-3 top-3 text-gray-500">
                <Calendar size={20} />
              </span>
            </div>
          </div>
          <div>
            <label className="block font-medium mb-1">–ú—è—Å—Ç–æ</label>
            <div className="relative">
              <input
                type="text"
                placeholder="–í—ä–≤–µ–¥–µ—Ç–µ –º—è—Å—Ç–æ—Ç–æ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ—Ç–æ"
                value={location}
                onChange={(e) => setLocation(e.target.value)}
                className="w-full border border-gray-400 rounded-md p-2 pl-10"
              />
              <span className="absolute left-3 top-3 text-gray-500">
                <MapPin size={20} />
              </span>
            </div>
          </div>
        </div>

        <div>
          <label className="block font-medium mb-1">–û–ø–∏—Å–∞–Ω–∏–µ</label>
          <textarea
            placeholder="–í—ä–≤–µ–¥–µ—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            className="w-full border border-gray-400 rounded-md p-2 h-24"
          ></textarea>
        </div>

        <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
          <div>
            <label className="block font-medium mb-1">–ó–∞–ø–æ—á–≤–∞ –≤</label>
            <div className="relative">
              <input
                type="time"
                value={startTime}
                onChange={(e) => setStartTime(e.target.value)}
                className="w-full border border-gray-400 rounded-md p-2 pl-10"
              />
              <span className="absolute left-3 top-3 text-gray-500">
                <Clock4 size={20} />
              </span>
            </div>
          </div>
          <div>
            <label className="block font-medium mb-1">–ó–∞–≤—ä—Ä—à–≤–∞ –≤</label>
            <div className="relative">
              <input
                type="time"
                value={endTime}
                onChange={(e) => setEndTime(e.target.value)}
                className="w-full border border-gray-400 rounded-md p-2 pl-10"
              />
              <span className="absolute left-3 top-3 text-gray-500">
                <Clock4 size={20} />
              </span>
            </div>
          </div>
        </div>

        <div>
          <label className="block font-medium mb-1">–ö–∞—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</label>
          <input type="file" accept="image/*" onChange={handleImageChange} className="w-full border border-gray-400 rounded-md p-2" />
          {image && <p className="text-sm text-gray-600 mt-2">–ò–∑–±—Ä–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image.name}</p>}
        </div>

        <div className="flex justify-between">
          <button type="button" className="border font-medium p-2 px-4 rounded-md hover:bg-black hover:text-white transition-colors">
            –û—Ç–∫–∞–∑
          </button>
          <button type="submit" className="bg-orange-500 text-white font-medium p-2 px-4 rounded-md hover:bg-orange-700 transition-colors" disabled={loading}>
            {loading ? "–ö–∞—á–≤–∞–Ω–µ..." : "–°—ä–∑–¥–∞–π —Å—ä–±–∏—Ç–∏–µ"}
          </button>
        </div>
      </form>
    </div>
  );
}

export default CreateEvent;
